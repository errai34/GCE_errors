import numpy as np
import scipy.optimize as scop
import matplotlib.pyplot as plt
from scipy import integrate

import GCE_calcs




#model = 0  #MG aka full
#model = 1  #noMG
model = 2  #IC data

###################
######  GCE part
###################

trunc = 8  #how many data points truncated from the front
dataset=20 #largest data point

#table of masses
#mass_table = np.loadtxt('spectra/unbinned/SIDM/SIDM_mass_table.txt')[:,1]                        
mass_table = np.loadtxt('spectra/unbinned/bbar/bbar_mass_table.txt')[:,1]

#file_path = 'spectra/binned/SIDM/binned_spectra_'
file_path = 'spectra/binned/bbar/binned_spectra_'

#file_name = np.array(['SIDM_full','SIDM_noMG','SIDM_IC'])[model]
file_name = 'bbar_full'

n_J=400
J = np.logspace(19.,26.,num=n_J)

n_mass = len(mass_table)

n_sigma = 100
sigma = np.logspace(-30.,-23.,num=n_sigma)

sigma_prior_norm = np.trapz(np.ones(n_sigma),x = np.log(sigma))# a flat prior in linear space for mass and logspace for cross section

mass_prior_norm = np.trapz(np.ones(n_mass),x = mass_table)

raw= np.array([np.loadtxt('data/background/GCE_paper_fullmodel_spectrum.dat'),
               np.loadtxt('data/background/GCE_paper_noMG_spectrum.dat'),
               np.loadtxt('data/background/GCE_paper_IC_spectrum.dat')])[model]
               
bin_center = raw[trunc:dataset,0]#logarthmic bin center
k = raw[trunc:dataset,5]
background = raw[trunc:dataset,7]
exposure = raw[trunc:dataset,6]

binned_spectra = np.loadtxt(file_path+file_name+'_'+str(dataset)+'_'+str(trunc)+'_GCE.txt')

mu = GCE_calcs.calculations.get_mu_SIDM(background,exposure, binned_spectra, J, sigma, mass_table)

k = np.tile(k,(n_sigma,n_J,n_mass,1))


plt.errorbar(10**bin_center,k[0,0,0,:] - background,yerr = np.sqrt(k[0,0,0,:]),label = 'Observed Residual')
plt.plot(10**bin_center,mu[max_index_GCE[0],max_index_GCE[1],max_index_GCE[2],:] - background,label = 'Expected Residual')
plt.xscale('log')
plt.xlabel('Energy [GeV]')
plt.ylabel('Residual Number Counts')
plt.legend(loc='best')
plt.savefig('plots/SIDM/test_residuals_GCE_2.png')
plt.clf()
